apply plugin: 'com.android.application'
apply from: rootProject.file('gradle/checkstyle.gradle')

def STRING = "String"
def BOOLEAN = "boolean"
def INT = "int"

android {
  compileSdkVersion parent.ext.androidCompileSdkVersion
  buildToolsVersion parent.ext.androidBuildToolsVersion

  defaultConfig {
    applicationId parent.ext.androidApplicationId
    minSdkVersion parent.ext.androidMinSdkVersion
    targetSdkVersion parent.ext.androidTargetSdkVersion
    versionCode parent.ext.androidVersionCode
    versionName parent.ext.androidVersionName

    buildConfigField INT, "CONCURRENT_INTERACTORS", "3"
    // If you have a dev/prod api url, you maybe need to set this in buildtypes
    buildConfigField STRING, "API_URL", '"http://api.randomuser.me/"'
    testInstrumentationRunner "me.panavtec.cleancontacts.CleanContactsRunner"
  }
  buildTypes {
    debug {
      testCoverageEnabled = true
      buildConfigField BOOLEAN, "RETROFIT_LOG", "true"
    }
    release {
      buildConfigField BOOLEAN, "RETROFIT_LOG", "false"

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  productFlavors {
    mock {
      applicationId parent.ext.androidApplicationId + '.mock'
    }
  }

  //you can use the diamond operator, multi-catch, strings in switches
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }
}

dependencies {
  compile rootProject.ext.dependencies.androidSupportv7
  compile rootProject.ext.dependencies.dagger
  annotationProcessor rootProject.ext.dependencies.daggerCompiler
  compile rootProject.ext.dependencies.butterknife
  compile rootProject.ext.dependencies.snackBars
  compile rootProject.ext.dependencies.recyclerView
  compile rootProject.ext.dependencies.picasso
  compile rootProject.ext.dependencies.recyclerAdapters
  compile rootProject.ext.dependencies.fAB
  compile rootProject.ext.dependencies.coordinator
  annotationProcessor rootProject.ext.dependencies.coordinatorCompiler

  compile project(':domain')
  compile project(':presentation')
  compile project(':data')

  androidTestAnnotationProcessor rootProject.ext.dependencies.daggerCompiler
  androidTestCompile rootProject.ext.testDependencies.mockito
  androidTestCompile rootProject.ext.androidTestDependencies.runner
  androidTestCompile rootProject.ext.androidTestDependencies.rules
  androidTestCompile rootProject.ext.androidTestDependencies.espresso_core
  androidTestCompile (rootProject.ext.androidTestDependencies.espresso_contrib) {
    exclude module: 'support-annotations'
    exclude module: 'recyclerview-v7'
    exclude module: 'support-v4'
  }
  androidTestCompile rootProject.ext.androidTestDependencies.espresso_intents

}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
  resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}
